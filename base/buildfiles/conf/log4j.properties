# A logging file for Spark


# Create two appenders: a console and a file appender
log4j.rootCategory=DEBUG, ConsoleApp, FileApp

# --------------------------------------------------------------------

# Set the console appender. Filter at the WARN level
log4j.appender.ConsoleApp=org.apache.log4j.ConsoleAppender
log4j.appender.ConsoleApp.target=System.err
log4j.appender.ConsoleApp.layout=org.apache.log4j.PatternLayout
log4j.appender.ConsoleApp.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n
log4j.appender.ConsoleApp.Threshold=WARN

# --------------------------------------------------------------------

# Set the file appender. Get all logs
log4j.appender.FileApp=org.apache.log4j.RollingFileAppender
log4j.appender.FileApp.File=/var/log/spark/spark.log
log4j.appender.FileApp.maxFileSize=2MB
log4j.appender.FileApp.maxBackupIndex=8
log4j.appender.FileApp.layout=org.apache.log4j.PatternLayout
log4j.appender.FileApp.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n
log4j.appender.FileApp.Threshold=DEBUG


# --------------------------------------------------------------------
# Silence some logs


# Settings to quiet third party logs that are too verbose
log4j.logger.org.spark-project.jetty=WARN
log4j.logger.org.spark-project.jetty.util.component.AbstractLifeCycle=ERROR
log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO
log4j.logger.org.apache.parquet=ERROR
log4j.logger.parquet=ERROR

# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent UDFs in SparkSQL with Hive support
log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR
